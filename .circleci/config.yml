version: 2.1

orbs:
    slack: circleci/slack@4.12.1

workflows:
    version: 2
    default:
        jobs:
            - macos-job:
                name: SPM
                xcode: "15.2.0"
                spm: true
            - macos-job:
                name: Carthage
                carthage: true
            - macos-job:
                name: CocoaPods
                cocoapods: true
            - verify_branch:
                name: Verify branch
                filters:
                    branches:
                        only: /^release.*/
    notify_release:
        jobs:
        - notify_release:
            filters:
                tags:
                    only: /(?!.*\bdaily\b)^v.*/
                branches:
                    ignore: /.*/
    notify_release_daily:
        jobs:
        - notify_release_daily:
            filters:
                tags:
                    only: /^v.*daily.*/
                branches:
                    ignore: /.*/

jobs:
    macos-job:
        parameters:
            xcode:
                type: string
                default: "15.2.0"
            cocoapods:
                type: boolean
                default: false
            carthage:
                type: boolean
                default: false
            spm:
                type: boolean
                default: false
        macos:
            xcode: << parameters.xcode >>
        environment:
            HOMEBREW_NO_AUTO_UPDATE: 1
        steps:
            - checkout
            - run:
                name: Ensure netrc
                command: Tests/Integration/ensure_netrc.sh
            - run:
                name: Install XcodeGen
                command: brew install xcodegen
            - when:
                condition: << parameters.carthage >>
                steps:
                  - run:
                      name: Install Carthage
                      command: |
                        max_retries=3
                        attempt=0
                        while (( attempt < max_retries )); do
                            ((attempt++))
                            sudo softwareupdate --install-rosetta --agree-to-license
                            if [[ $? -eq 0 ]]; then
                                attempt=max_retries
                                echo "Rosetta installed"
                            else
                                echo "Rosetta installation failed on attempt $attempt"
                            fi

                            sleep 1
                        done

                        attempt=0
                        while (( attempt < max_retries )); do
                            ((attempt++))
                            rm -rf Carthage.pkg
                            curl -OL "https://github.com/Carthage/Carthage/releases/download/0.39.1/Carthage.pkg"
                            sudo installer -pkg Carthage.pkg -target /

                            if [[ $? -eq 0 ]]; then
                                attempt=max_retries
                                echo "Carthage installed"
                            else
                                echo "Carthage installation failed on attempt $attempt"
                            fi

                            sleep 1
                        done

                  - run:
                      name: Test Integration via Carthage
                      command: Tests/Integration/test_carthage.sh
            - when:
                condition: << parameters.cocoapods >>
                steps:
                  - run:
                      name: Test Integration via CocoaPods
                      command: Tests/Integration/test_cocoapods.sh
            - when:
                condition: << parameters.spm >>
                steps:
                  - run:
                      name: Build release script
                      command: |
                        pushd scripts/release
                        swift build
                        popd
                  - run:
                      name: SPM SSH fix
                      command: |
                        rm ~/.ssh/id_rsa
                        for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts || true
                  - run:
                      name: Build and Run using SPM
                      command: Tests/Integration/test_spm.sh
                  - run:
                      name: Verify LICENSE.md is up-to-date
                      command: ./scripts/release/check-license.sh
    notify_release:
        docker:
            - image: cimg/base:stable
        resource_class: small
        steps:
            - slack/notify:
                channel: sdk-releases
                event: pass
                custom: |
                    {
                        "blocks": [
                            {
                                "type": "section",
                                "text": {
                                    "type": "mrkdwn",
                                    "text": "Common SDK <https://github.com/mapbox/mapbox-sdk-common/releases/tag/$CIRCLE_TAG | $CIRCLE_TAG> or <https://github.com/mapbox/mapbox-sdk/releases/tag/common/$CIRCLE_TAG | common/$CIRCLE_TAG> has been released. cc @core-sdk-team  @gl-native-team @maps-android @maps-ios @search-sdk-team @navnative @navigation-ios @navigation-android"
                                }
                            }
                        ]
                    }
    notify_release_daily:
        docker:
            - image: cimg/base:stable
        resource_class: small
        steps:
            - slack/notify:
                channel: sdk-releases
                event: pass
                custom: |
                    {
                        "blocks": [
                            {
                                "type": "section",
                                "text": {
                                    "type": "mrkdwn",
                                    "text": "Common SDK daily version <https://github.com/mapbox/mapbox-sdk/releases/tag/common/$CIRCLE_TAG | common/$CIRCLE_TAG> has been released"
                                }
                            }
                        ]
                    }
    verify_branch:
        docker:
            - image: cimg/base:stable
        resource_class: small
        steps:
            - checkout
            - run:
                name: Verify version
                command: |
                    VERSION=$(echo "${CIRCLE_BRANCH}" | sed -E "s/^release[\/-]v//")
                    MAJOR=$(echo "${VERSION}" | cut -d. -f1)
                    MINOR=$(echo "${VERSION}" | cut -d. -f2)
                    echo "Version: ${VERSION} MAJOR: ${MAJOR} MINOR: ${MINOR}"
                    if [[ "${MAJOR}" -eq 24 ]]; then
                        if [[ "${MINOR}" -lt 6 ]]; then
                            echo "Version ${VERSION} is not allowed to be released from the main branch because of incorrect dependencies in SPM. Please use lts branch (see lts/v24.5 for example)."
                            exit 1
                        fi
                    fi